<?php
require_once __DIR__.'/layout/head.phtml';
?>

<?php
require_once __DIR__.'/layout/header.phtml';
?>

	<!-- Begin page content -->
	<main role="main" class="container">

<?php
require __DIR__ . '/../../config.inc.php';

use olafnorge\borgphp\InfoCommand;
?>

<h1> borg backups </h1>
<h2> repositories </h2>

<table>
<tr>
	<th>name</th>
	<th>size</th>
</tr>

<?php
$error_string = "";
$total_size = 0;
foreach ($conf["repos"] as $name => $location)
{
	$cmd = new InfoCommand([
		$location,
	]);
	$cmd->setEnv([
		"BORG_UNKNOWN_UNENCRYPTED_REPO_ACCESS_IS_OK" => "yes",
	]);
	try
	{
		$output = $cmd->mustRun()->getOutput();
	}
	catch (Exception $ex)
	{
		$errors = $cmd->getErrorOutput();
		$error_message = $errors[0]["message"];
		if(str_starts_with($error_message, "Failed to create/acquire the lock "))
		{
			$output = "LOCK";
		}
		else
		{
			$error_message = $errors[1]["message"];
			if
			(
				strpos($error_message, "PermissionError: [Errno 13] Permission denied") !== false && 
				strpos($error_message, "lock.exclusive") !== false
			)
			{
				$output = "LOCK";
			}
			else
			{
				$output = "UNKNOWN_ERROR";
				$error_string .= "<hr>";
				$error_string .= "<hr>";
				$error_string .= "<pre>" . $ex->getMessage() . "</pre>";
				$error_string .= "<hr>";
				$error_string .= "<pre>" . var_export($errors, true) . "</pre>";
			}
		}
	}
// 	var_dump($output); die;
	?>
	<tr>
		<td><a href="<?= $BASE . $f3->alias("repository", [], ["location" => $location]) ?>"><?= $name ?></a></td>
		<?php
		if(!is_array($output))
		{
			$display = "";
			if($output === "LOCK")
			{
				$display = "locked";
			}
			else 
			{
				$display = "error";
			}
			?>
			<td><?= $display ?></td>
			<?php
		}
		else
		{
			$total_size += $output["cache"]["stats"]["unique_csize"];
			?>
			<td><?= ByteUnits\Binary::bytes($output["cache"]["stats"]["unique_csize"])->format("GiB", " ") ?></td>
			<?php
		}
		?>
	</tr>
	<?php
}
?>

<tr>
	<th>sum</th>
	<th><?= ByteUnits\Binary::bytes($total_size)->format("GiB", " ") ?></th>
</tr>
<tr>
	<th>count</th>
	<th><?= count($conf["repos"]) ?></th>
</tr>
</table>

<?= $error_string ?>
	</main>

<?php
require_once __DIR__.'/layout/footer.phtml';
?>

<?php
require_once __DIR__.'/layout/foot.phtml';
?>
